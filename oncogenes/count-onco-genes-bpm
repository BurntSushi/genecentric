#!/usr/bin/env python2

import argparse
import csv

import geneids

import bpm.bpmreader

parser = argparse.ArgumentParser(
    description='Count onco genes in a BPM file.',
    formatter_class=argparse.ArgumentDefaultsHelpFormatter)
aa = parser.add_argument
aa('bpm', type=str,
   metavar='INPUT_BPM_FILE',
   help='Location of the input BPM file.')
aa('orthologs', type=str)
aa('oncogenes', type=str,
   metavar='INPUT_ONCO_GENES',
   help='Location of the othologous yeast gene list file.')
conf = parser.parse_args()

# Put all of the oncogenes into a set.
oncogenes = set()
for gene in open(conf.oncogenes):
    oncogenes.add(gene.strip().upper())

humanOrths = set()
for row in csv.reader(open(conf.orthologs), delimiter='\t'):
    _, systematic = row[0].split(':$:')
    humanOrths.add(systematic)

onco_in_bpm = set()
orth_in_bpm = set()
def check_gene(gene):
    if gene in oncogenes:
        onco_in_bpm.add(gene)
    if gene in humanOrths:
        orth_in_bpm.add(gene)

for i, (mod1, mod2) in enumerate(bpm.bpmreader.read(conf.bpm)):
    for gene in mod1:
        check_gene(gene)
    for gene in mod2:
        check_gene(gene)

print len(onco_in_bpm), len(oncogenes)
print len(orth_in_bpm), len(humanOrths)

